{"version":3,"sources":["../../src/helpers/updateInstaPhotos.js"],"names":["updateInstaPhotos","req","res","next","then","err","console","log","photos","forEach","photo","instaPhoto","InstaPhoto","id","caption","media_type","media_url","permalink","thumbnail_url","timestamp","username","findOneAndUpdate","upsert"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA;SACeA,iB;;;;;+EAAf,iBAAiCC,GAAjC,EAAsCC,GAAtC,EAA2CC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACuB,kCACNC,IADM,CACD,UAAAF,GAAG,EAAI;AACT,qBAAOA,GAAP;AACH,aAHM,WAIA,UAAAG,GAAG,EAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,aANM,CADvB;;AAAA;AACQG,YAAAA,MADR;AASIA,YAAAA,MAAM,CAACC,OAAP,CAAe,UAAAC,KAAK,EAAI;AACpB,kBAAIC,UAAU,GAAG,IAAIC,sBAAJ,CACb;AACIC,gBAAAA,EAAE,EAAEH,KAAK,CAACG,EADd;AAEIC,gBAAAA,OAAO,EAAEJ,KAAK,CAACI,OAFnB;AAGIC,gBAAAA,UAAU,EAAEL,KAAK,CAACK,UAHtB;AAIIC,gBAAAA,SAAS,EAAEN,KAAK,CAACM,SAJrB;AAKIC,gBAAAA,SAAS,EAAEP,KAAK,CAACO,SALrB;AAMIC,gBAAAA,aAAa,EAAER,KAAK,CAACQ,aANzB;AAOIC,gBAAAA,SAAS,EAAET,KAAK,CAACS,SAPrB;AAQIC,gBAAAA,QAAQ,EAAEV,KAAK,CAACU,QARpB,CASI;;AATJ,eADa,CAAjB;;AAaAR,qCAAWS,gBAAX,CACI;AAACR,gBAAAA,EAAE,EAAEF,UAAU,CAACE;AAAhB,eADJ,EAEI;AACIC,gBAAAA,OAAO,EAAEH,UAAU,CAACG,OADxB;AAEIC,gBAAAA,UAAU,EAAEJ,UAAU,CAACI,UAF3B;AAGIC,gBAAAA,SAAS,EAAEL,UAAU,CAACK,SAH1B;AAIIC,gBAAAA,SAAS,EAAEN,UAAU,CAACM,SAJ1B;AAKIC,gBAAAA,aAAa,EAAEP,UAAU,CAACO,aAL9B;AAMIC,gBAAAA,SAAS,EAAER,UAAU,CAACQ;AAN1B,eAFJ,EAUI;AAACG,gBAAAA,MAAM,EAAE;AAAT,eAVJ,EAWI,UAACjB,GAAD,EAAS;AACT,oBAAGA,GAAH,EAAQ;AAAC,yBAAOF,IAAI,CAACE,GAAD,CAAX;AAAmB;AAC/B,eAbD;AAcH,aA5BD;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsCC;eAEcL,iB","sourcesContent":["import getInstaPhotos from './getInstaPhotos';\nimport InstaPhoto from '../models/instaPhoto'\n\n// Call instaPhotoGetter asynchronously and save received values to mongoose database\nasync function updateInstaPhotos(req, res, next) {\n    let photos = await getInstaPhotos()\n                .then(res => {\n                    return res\n                })\n                .catch(err => {\n                    console.log(err)\n                });\n\n    photos.forEach(photo => {\n        var instaPhoto = new InstaPhoto(\n            {\n                id: photo.id,\n                caption: photo.caption,\n                media_type: photo.media_type,\n                media_url: photo.media_url,\n                permalink: photo.permalink,\n                thumbnail_url: photo.thumbnail_url,\n                timestamp: photo.timestamp,\n                username: photo.username,\n                //tags: req.body.id,\n            }\n        )\n        InstaPhoto.findOneAndUpdate(\n            {id: instaPhoto.id}, \n            {\n                caption: instaPhoto.caption,\n                media_type: instaPhoto.media_type,\n                media_url: instaPhoto.media_url,\n                permalink: instaPhoto.permalink,\n                thumbnail_url: instaPhoto.thumbnail_url,\n                timestamp: instaPhoto.timestamp,\n            }, \n            {upsert: true}, \n            (err) => {\n            if(err) {return next(err); }\n        });\n    });\n};\n\nexport default updateInstaPhotos;\n\n"],"file":"updateInstaPhotos.js"}