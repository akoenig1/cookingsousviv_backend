{"version":3,"sources":["../../src/controllers/recipeController.js"],"names":["exports","recipe_create_get","req","res","next","InstaPhoto","find","callback","exec","err","instaPhotos","send","title","instaPhotoList","recipe_create_post","recipe","Recipe","body","intro","ingredients","directions","tags","save","url","recipe_delete_get","recipe_delete_post","recipe_title","then","results","findByIdAndRemove","_id","deleteRecipe","recipe_update_post","recipe_id","id","findByIdAndUpdate","$set","findById","result","recipe_list","list_recipes"],"mappings":"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","sourcesContent":["import Recipe from '../models/recipe';\nimport InstaPhoto from '../models/instaPhoto';\n\n// Display recipe create form on GET\nexports.recipe_create_get = function(req, res, next) {\n    // Get all instaPhotos available to add to a recipe\n    InstaPhoto.find(callback)\n    .exec(function(err, instaPhotos) {\n        if(err) { return next(err); }\n        res.send({ title: 'Add Recipe', instaPhotoList: instaPhotos });\n    });\n};\n\n// Handle recipe create on POST\nexports.recipe_create_post = function(req, res, next) {\n    // Create a recipe object\n    var recipe = new Recipe(\n        {\n            title: req.body.title,\n            intro: req.body.intro,\n            ingredients: req.body.ingredients,\n            directions: req.body.directions,\n            tags: req.body.tags\n        }\n    );\n\n    // Save recipe in databse\n    recipe.save(function(err) {\n        if(err) { return next(err); }\n        // Successful, so redirect to book page\n        res.send(recipe.url);\n    });\n};\n\n// Display recipe delete form on GET\nexports.recipe_delete_get = function(req, res, next) {\n    // Find instaPhotos associated with this recipe so association can be removed\n    InstaPhoto.find(callback)\n    .exec(function(err, instaPhotos) {\n        if(err) { return next(err); }\n        res.send({ title: 'Add Recipe', instaPhotoList: instaPhotos });\n    });\n};\n\n// Handle recipe delete on POST\nexports.recipe_delete_post = async function(req, res, next) {\n    const recipe_title = req.body.title\n    Recipe.find( {title: recipe_title} ).exec()\n    .then( (results) => {\n        Recipe.findByIdAndRemove(results[0]._id, function deleteRecipe(err) {\n            if(err) {return next(err)}\n            res.send(`Successfully deleted post: ${recipe_title}`)\n        });\n    });\n};\n\n// Handle recipe update form on POST\nexports.recipe_update_post = function(req, res, next) {\n    // Find recipe object to update\n    const recipe_id = req.body.id;\n\n    Recipe.findByIdAndUpdate(recipe_id, {$set:req.body}, (err) => {\n        if(err) {return next(err)}\n    }).exec()\n    .then(\n        Recipe.findById(recipe_id).exec()\n        .then( (result) => {\n            res.send(result.url)\n        })\n    );\n};\n\n// Display list of all recipes\nexports.recipe_list = function(req, res, next) {\n    Recipe.find({}, 'title url intro ingredients directions tags')\n    //.populate('title')\n    .exec(function(err, list_recipes) {\n        if(err) {return next(err)}\n        //Successful, so send to frontend\n        res.send({title: 'Recipes', recipe_list: list_recipes});\n    });\n};"],"file":"recipeController.js"}